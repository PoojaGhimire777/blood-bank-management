[{"C:\\GitFolder\\blood-bank-management\\frontwork\\src\\index.js":"1","C:\\GitFolder\\blood-bank-management\\frontwork\\src\\Main.js":"2","C:\\GitFolder\\blood-bank-management\\frontwork\\src\\Contact.js":"3","C:\\GitFolder\\blood-bank-management\\frontwork\\src\\Home.js":"4","C:\\GitFolder\\blood-bank-management\\frontwork\\src\\Stuff.js":"5","C:\\GitFolder\\blood-bank-management\\frontwork\\src\\components\\LoginComponent.js":"6","C:\\GitFolder\\blood-bank-management\\frontwork\\src\\services\\LoginService.js":"7"},{"size":185,"mtime":1616496056333,"results":"8","hashOfConfig":"9"},{"size":1115,"mtime":1616496056322,"results":"10","hashOfConfig":"9"},{"size":340,"mtime":1616496056317,"results":"11","hashOfConfig":"9"},{"size":894,"mtime":1616496056320,"results":"12","hashOfConfig":"9"},{"size":1296,"mtime":1616496056324,"results":"13","hashOfConfig":"9"},{"size":2645,"mtime":1616496056329,"results":"14","hashOfConfig":"9"},{"size":439,"mtime":1616496056369,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1mrmg5l",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},"C:\\GitFolder\\blood-bank-management\\frontwork\\src\\index.js",[],"C:\\GitFolder\\blood-bank-management\\frontwork\\src\\Main.js",[],"C:\\GitFolder\\blood-bank-management\\frontwork\\src\\Contact.js",[],"C:\\GitFolder\\blood-bank-management\\frontwork\\src\\Home.js",[],"C:\\GitFolder\\blood-bank-management\\frontwork\\src\\Stuff.js",[],"C:\\GitFolder\\blood-bank-management\\frontwork\\src\\components\\LoginComponent.js",["32","33","34","35"],"import React, { Component } from \"react\";\r\nimport axios from 'axios'\r\nimport LoginService  from '../services/LoginService';\r\n\r\n\r\n class LoginComponent extends Component {\r\n    \r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n        id: this.props.match.params.id,\r\n        username: '',\r\n        password: '',\r\n        role:'',\r\n    }\r\n\r\n    this.changeUserNameHandler = this.changeUserNameHandler.bind(this)\r\n    this.changePasswordHandler = this.changePasswordHandler.bind(this)\r\n    this.handleChange = this.handleChange.bind(this)\r\n    this.loginClicked = this.loginClicked.bind(this)\r\n    \r\n}\r\n\r\nchangeUserNameHandler= (event) => {\r\n  this.setState({username: event.target.value});\r\n}\r\n\r\nchangePasswordHandler= (event) => {\r\n  this.setState({password: event.target.value});\r\n}\r\n\r\nhandleChange= (event) => {\r\n  this.setState({role: event.target.value});\r\n}\r\nloginClicked() {\r\n \r\n  \r\nLoginService.adminLogin(this.state.username,this.state.password,this.state.role).then(resp => {\r\n  console.log(resp.data);\r\n  if(resp.status === 200){\r\n    this.props.history.push('/welcome');\r\n  }\r\n  else{\r\n     \r\n  }\r\n  // if(resp.data.obj.status === 1) {\r\n  //   openFirstPage();\r\n  // } else {\r\n  //   errorMessage();\r\n  // }\r\n})\r\n\r\n \r\n}\r\n    render() {\r\n      \r\n        return (\r\n        <div className=\"base-container\" ref={this.props.containerRef}>\r\n          \r\n      \r\n          <label>\r\n        Login As:\r\n          <select role={this.state.role} onChange={this.handleChange} >\r\n              <option role=\"select\" >SELECT ONE </option>  \r\n              <option role=\"admin\"> ADMIN </option>  \r\n              <option role=\"user\"> USER </option>  \r\n              \r\n           </select>\r\n        </label>\r\n\r\n        <div className=\"content\">\r\n            \r\n          <div className=\"form\">\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"username\">Username: </label>\r\n              <input type=\"text\" name=\"username\" placeholder=\"Username\" \r\n              value={this.state.username} onChange={this.changeUserNameHandler}/>\r\n            </div>\r\n            \r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"password\">Password: </label>\r\n              <input type=\"password\" name=\"password\" placeholder=\"Password\" \r\n              value={this.state.password} onChange={this.changePasswordHandler}/>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"footer\">\r\n          <button type=\"button\" className=\"btn\" onClick={this.loginClicked}>\r\n            Login\r\n          </button>\r\n        </div>\r\n        </div>\r\n    );\r\n    }\r\n}\r\nexport default LoginComponent;","C:\\GitFolder\\blood-bank-management\\frontwork\\src\\services\\LoginService.js",["36"],"import axios from 'axios';\r\n\r\nconst USER_API_BASE_URL = \"http://localhost:8080/\";\r\n\r\nclass LoginService {\r\n\r\n    \r\n\r\n    adminLogin(username,password,role){\r\n       // adminLogin(){\r\n        return axios.get(\"http://localhost:8080/user/authenticate?username=\"+username+\"&role=\" +role+\"&password=\"+password);\r\n     \r\n\r\n        //return axios.get(\"http://localhost:8080/admin/getAllDonor\");\r\n    }\r\n  \r\n}\r\n\r\nexport default new LoginService()",{"ruleId":"37","severity":1,"message":"38","line":2,"column":8,"nodeType":"39","messageId":"40","endLine":2,"endColumn":13},{"ruleId":"41","severity":1,"message":"42","line":65,"column":23,"nodeType":"43","endLine":65,"endColumn":36},{"ruleId":"41","severity":1,"message":"42","line":66,"column":23,"nodeType":"43","endLine":66,"endColumn":35},{"ruleId":"41","severity":1,"message":"42","line":67,"column":23,"nodeType":"43","endLine":67,"endColumn":34},{"ruleId":"37","severity":1,"message":"44","line":3,"column":7,"nodeType":"39","messageId":"40","endLine":3,"endColumn":24},"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","jsx-a11y/aria-role","Elements with ARIA roles must use a valid, non-abstract ARIA role.","JSXAttribute","'USER_API_BASE_URL' is assigned a value but never used."]